class Bird {

	def serialize() {
		return [
			"x": this.x,
			"y": this.y,
			"yspeed": this.yspeed,
			"speed": this.speed
		]
	}

	def deserialize(obj) {
		this.x = obj["x"]
		this.y = obj["y"]
		this.yspeed = obj["yspeed"]
		this.speed = obj["speed"]
	}

	def Bird() {
		this.collisionPadding = 5
		this.x = 53.0f
		this.speed = 100.0f
		this.y = 50.0f
		this.yspeed = 0.0f
		this.ygravity = 500.0f
		this.animationslide = 2
		this.animtimer = 0.0f

		this.img = []
		for (var i = 0; i <= 3; ++i) {
			var imgId = i == 3 ? 1 : i;
			this.img.push_back_ref(love.graphics.newImage("assets/bird" + to_string(imgId) + ".png"))
		}
		this.width = this.img[0].getWidth()
		this.height = this.img[0].getHeight() / 4

		this.ox = this.img[0].getWidth() / 2.0f
		this.oy = this.img[0].getWidth() / 2.0f
	}

	def left() {
		return this.x - this.img[0].getWidth() / 2.0f
	}

	def right() {
		return this.x + this.img[0].getWidth() / 2.0f
	}

	def top() {
		return this.y - this.img[0].getHeight() / 2.0f
	}

	def bottom() {
		return this.y + this.img[0].getHeight() / 2.0f
	}

	def draw() {
		love.graphics.draw(this.img[this.animationslide], this.left(), this.top())
	}

	def update(delta) {
		this.animtimer += delta

		if (this.animtimer > 0.12f) {

			this.animtimer = 0
			this.animationslide += 1
			if (this.animationslide > 3) {
				this.animationslide = 3

				if (cheatFly) {
					this.flap(false)
				}
			}
		}

		this.yspeed += this.ygravity * delta
		this.y += this.yspeed * delta

		if (this.bottom() - this.collisionPadding > landTop) {
			assets["die"].play()
			return false
		}

		if (this.yspeed < 0 && this.top() < 0) {
			this.yspeed = 0
			this.y = this.collisionPadding
		}

		return true
	}

	def flap(mute) {
		this.yspeed = -140.0f
		this.animationslide = 0
		if (mute == false) {
			assets["wing"].play()
		}
	}

	def reset() {
		this.y = love.graphics.getHeight() / 3
		this.flap(true)
	}
}
